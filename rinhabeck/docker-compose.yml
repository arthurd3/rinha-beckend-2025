services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"
  api1: &api
    build: .
    hostname: api1
    environment:
      - PAYMENT_PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "90MB"
  api2:
    <<: *api
    hostname: api2
  db:
    image: postgres:16-alpine
    hostname: db
    environment:
      - POSTGRES_DB=rinha
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d rinha -U admin"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "110MB"
  cache:
    image: redis:7.2-alpine
    hostname: cache
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: "30MB"
networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
volumes:
  postgres-data: {}